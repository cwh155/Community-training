//按键控制LED
#include "ti_msp_dl_config.h"

unsigned int dealyTab[]={3,10,15};//LED亮灭周期
volatile unsigned int tab_index;
volatile unsigned int flag_run;

//延时函数
void delay_time(unsigned int j)
{
	unsigned int i;
	for(i=0;i<j;i++)
	{
		delay_cycles(3200000);//100ms
	}
}

int main(void)
{
    SYSCFG_DL_init();

    /* LED on by default */
	//初始化
	/* Default: LED1 and LED3 ON, LED2 OFF */
    DL_GPIO_setPins(GPIO_LED_PORT , GPIO_LED_USER_LED_PIN);

	

    while (1) 
	{
		if (DL_GPIO_readPins(GPIO_SWITCHES_PORT,GPIO_SWITCHES_SWITCH_2_PIN))
		{
			delay_cycles(32000000);//等待10ms
			DL_GPIO_clearPins(GPIO_LED_PORT , GPIO_LED_USER_LED_PIN);
			delay_cycles(32000000);
			DL_GPIO_setPins(GPIO_LED_PORT , GPIO_LED_USER_LED_PIN);
		}
	}
}

//外部中断流水灯
#include "ti_msp_dl_config.h"


int main(void)
{
    SYSCFG_DL_init();

    NVIC_EnableIRQ(TIMER_0_INST_INT_IRQN);
	DL_TimerG_startCounter(TIMER_0_INST);
	delay_cycles(7000000);
	NVIC_EnableIRQ(TIMER_1_INST_INT_IRQN);
	DL_TimerG_startCounter(TIMER_1_INST);
	delay_cycles(7000000);
    NVIC_EnableIRQ(TIMER_2_INST_INT_IRQN);
	DL_TimerG_startCounter(TIMER_2_INST);
	delay_cycles(7000000);
	NVIC_EnableIRQ(TIMER_3_INST_INT_IRQN);
	DL_TimerG_startCounter(TIMER_3_INST);
    while (1) {

    }
}

void TIMER_0_INST_IRQHandler(void)
{
    switch (DL_TimerG_getPendingInterrupt(TIMER_0_INST)) {
        case DL_TIMER_IIDX_ZERO:
            DL_GPIO_setPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_0_PIN);
			delay_cycles(7000000);
			DL_GPIO_clearPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_0_PIN);
            break;
        default:
            break;
    }
}

void TIMER_1_INST_IRQHandler(void)
{
    switch (DL_TimerG_getPendingInterrupt(TIMER_1_INST)) {
        case DL_TIMER_IIDX_ZERO:
            DL_GPIO_setPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_1_PIN);
			delay_cycles(7000000);
			DL_GPIO_clearPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_1_PIN);
            break;
        default:
            break;
    }
}

void TIMER_2_INST_IRQHandler(void)
{
    switch (DL_TimerG_getPendingInterrupt(TIMER_2_INST)) {
        case DL_TIMER_IIDX_ZERO:
            DL_GPIO_setPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_2_PIN);
			delay_cycles(7000000);
			DL_GPIO_clearPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_2_PIN);
            break;
        default:
            break;
    }
}

void TIMER_3_INST_IRQHandler(void)
{
    switch (DL_TimerG_getPendingInterrupt(TIMER_3_INST)) {
        case DL_TIMER_IIDX_ZERO:
            DL_GPIO_setPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_3_PIN);
			delay_cycles(7000000);
			DL_GPIO_clearPins(GPIO_LEDS_PORT,GPIO_LEDS_USER_LED_3_PIN);
            break;
        default:
            break;
    }
}
